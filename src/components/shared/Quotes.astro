---
import BackgroundPattern from './BackgroundPattern.astro';
import Section from './Section.astro';
import Title from './Title.astro';
import { quotes } from '@site';

interface Props {
  more?: boolean;
  background?: boolean;
}

const { more, background = true } = Astro.props;
---

<Section color={!background ? 'var(--bg-color)' : ''}>
  {background && <BackgroundPattern slot="bg" />}
  <Title text={quotes.title} body={quotes.description} level="h2" /> 
  <div class="quotes">
    {
      more && background && (
        <div class="see-more">
          <a href="/casos-de-exito" class="outline button">
            Ver m√°s
          </a>
        </div>
      )
    }
    {
      quotes.items
        .map((item) => {
          return (
            <article>
              <p class="quote-text">"{item.quote}"</p>
              <span>
                <img 
                  src={item.image.src} 
                  alt={`${item.author} - ${item.position}`} 
                  width={item.image.width} 
                  height={item.image.height} 
                  loading="lazy"
                />
                <div class="person">
                  <p>{item.author}</p>
                  <small>{item.position}</small>
                </div>
              </span>
            </article>
          );
        })
        .filter((_, i) => (more ? i < 3 : true))
    }
  </div>
</Section>

<style>
  .quotes {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--grid-gap);
    margin-top: calc(var(--container-padding-y) / 2);
    position: relative;
    @media screen and (max-width: 375px) {
      grid-template-columns: 1fr;
    }
    &:has(.see-more) {
      padding-bottom: 5rem;
    }
    .see-more {
      background: linear-gradient(
        transparent,
        rgba(255, 255, 255, 0.5),
        white
      );
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: flex;
      align-items: flex-end;
      justify-content: center;
    }
    article {
      display: flex;
      flex-direction: column;
      gap: var(--card-gap);
      font-size: var(--text-size);
      font-weight: 500;
      color: var(--text-color);
      background-color: white;
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      padding: var(--card-padding);
      min-height: 150px;

      .quote-text {
        font-family: var(--font); /* Usa la fuente global */
        font-weight: 400;
        line-height: var(--text-line-height);
        margin-bottom: 0.5rem;
        font-style: italic;
      }

      span {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-top: auto;

        img {
          width: auto;
          height: 36px;
          max-width: 36px;
          object-fit: contain;
          border-radius: 50%;
        }

        .person {
          p {
            font-weight: 500;
            line-height: var(--text-line-height);
            font-family: var(--font); /* Usa la fuente global */
          }
          small {
            font-weight: 400;
            font-family: var(--font); /* Usa la fuente global */
          }
        }
      }
    }
  }
</style>
